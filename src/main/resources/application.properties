
# The SQL dialect makes Hibernate generate better SQL for the chosen database


spring.datasource.url =jdbc:postgresql://ec2-54-247-71-245.eu-west-1.compute.amazonaws.com:5432/dcc1id7c78ba38

spring.datasource.username=tedijhasbichfs
spring.datasource.password=400799839e6a276ecea6bdd01396081d7e417477b7a03718db52e75aa4ecbda0


#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=postgres
#spring.datasource.password=123

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
